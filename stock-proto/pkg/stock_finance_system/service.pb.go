// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: service.proto

package stock_finance_system

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BuyStockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int32   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Symbol    string  `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Quantity  int32   `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price     float32 `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	IsVirtual bool    `protobuf:"varint,5,opt,name=is_virtual,json=isVirtual,proto3" json:"is_virtual,omitempty"`
}

func (x *BuyStockRequest) Reset() {
	*x = BuyStockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyStockRequest) ProtoMessage() {}

func (x *BuyStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyStockRequest.ProtoReflect.Descriptor instead.
func (*BuyStockRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

func (x *BuyStockRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *BuyStockRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *BuyStockRequest) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *BuyStockRequest) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *BuyStockRequest) GetIsVirtual() bool {
	if x != nil {
		return x.IsVirtual
	}
	return false
}

type BuyStockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId  int32   `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Balance float32 `protobuf:"fixed32,3,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *BuyStockResponse) Reset() {
	*x = BuyStockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyStockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyStockResponse) ProtoMessage() {}

func (x *BuyStockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyStockResponse.ProtoReflect.Descriptor instead.
func (*BuyStockResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1}
}

func (x *BuyStockResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BuyStockResponse) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *BuyStockResponse) GetBalance() float32 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type SellStockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int32   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Symbol    string  `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Quantity  int32   `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price     float32 `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	IsVirtual bool    `protobuf:"varint,5,opt,name=is_virtual,json=isVirtual,proto3" json:"is_virtual,omitempty"`
}

func (x *SellStockRequest) Reset() {
	*x = SellStockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SellStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SellStockRequest) ProtoMessage() {}

func (x *SellStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SellStockRequest.ProtoReflect.Descriptor instead.
func (*SellStockRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{2}
}

func (x *SellStockRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SellStockRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *SellStockRequest) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *SellStockRequest) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SellStockRequest) GetIsVirtual() bool {
	if x != nil {
		return x.IsVirtual
	}
	return false
}

type SellStockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId  int32   `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Balance float32 `protobuf:"fixed32,3,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *SellStockResponse) Reset() {
	*x = SellStockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SellStockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SellStockResponse) ProtoMessage() {}

func (x *SellStockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SellStockResponse.ProtoReflect.Descriptor instead.
func (*SellStockResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{3}
}

func (x *SellStockResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SellStockResponse) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SellStockResponse) GetBalance() float32 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type NewAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	UserId  int32   `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Balance float32 `protobuf:"fixed32,3,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *NewAccountReq) Reset() {
	*x = NewAccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewAccountReq) ProtoMessage() {}

func (x *NewAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewAccountReq.ProtoReflect.Descriptor instead.
func (*NewAccountReq) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{4}
}

func (x *NewAccountReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NewAccountReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *NewAccountReq) GetBalance() float32 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type NewAccountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	UserId  int32  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *NewAccountResp) Reset() {
	*x = NewAccountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewAccountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewAccountResp) ProtoMessage() {}

func (x *NewAccountResp) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewAccountResp.ProtoReflect.Descriptor instead.
func (*NewAccountResp) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{5}
}

func (x *NewAccountResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NewAccountResp) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

var File_service_proto protoreflect.FileDescriptor

var file_service_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x70, 0x69, 0x64, 0x65, 0x72, 0x22,
	0x93, 0x01, 0x0a, 0x0f, 0x42, 0x75, 0x79, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x22, 0x55, 0x0a, 0x10, 0x42, 0x75, 0x79, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x94, 0x01, 0x0a,
	0x10, 0x53, 0x65, 0x6c, 0x6c, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x22, 0x56, 0x0a, 0x11, 0x53, 0x65, 0x6c, 0x6c, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x56, 0x0a, 0x0d, 0x4e,
	0x65, 0x77, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x22, 0x43, 0x0a, 0x0e, 0x4e, 0x65, 0x77, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x32, 0x89, 0x02, 0x0a, 0x19, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x08, 0x42, 0x75, 0x79, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x70, 0x69,
	0x64, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x79, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x70,
	0x69, 0x64, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x79, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x09, 0x53, 0x65, 0x6c, 0x6c, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x12, 0x20, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x70, 0x69,
	0x64, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x73,
	0x70, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0a, 0x4e, 0x65, 0x77, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e,
	0x73, 0x70, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x4e, 0x65, 0x77, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x73,
	0x70, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x4e, 0x65, 0x77, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x42, 0x43, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x52, 0x61, 0x76, 0x65, 0x6e, 0x48, 0x75, 0x6f, 0x2f, 0x67, 0x6f, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_service_proto_rawDescOnce sync.Once
	file_service_proto_rawDescData = file_service_proto_rawDesc
)

func file_service_proto_rawDescGZIP() []byte {
	file_service_proto_rawDescOnce.Do(func() {
		file_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_proto_rawDescData)
	})
	return file_service_proto_rawDescData
}

var file_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_service_proto_goTypes = []interface{}{
	(*BuyStockRequest)(nil),   // 0: goshare.spider.BuyStockRequest
	(*BuyStockResponse)(nil),  // 1: goshare.spider.BuyStockResponse
	(*SellStockRequest)(nil),  // 2: goshare.spider.SellStockRequest
	(*SellStockResponse)(nil), // 3: goshare.spider.SellStockResponse
	(*NewAccountReq)(nil),     // 4: goshare.spider.NewAccountReq
	(*NewAccountResp)(nil),    // 5: goshare.spider.NewAccountResp
}
var file_service_proto_depIdxs = []int32{
	0, // 0: goshare.spider.StockFinanceSystemService.BuyStock:input_type -> goshare.spider.BuyStockRequest
	2, // 1: goshare.spider.StockFinanceSystemService.SellStock:input_type -> goshare.spider.SellStockRequest
	4, // 2: goshare.spider.StockFinanceSystemService.NewAccount:input_type -> goshare.spider.NewAccountReq
	1, // 3: goshare.spider.StockFinanceSystemService.BuyStock:output_type -> goshare.spider.BuyStockResponse
	3, // 4: goshare.spider.StockFinanceSystemService.SellStock:output_type -> goshare.spider.SellStockResponse
	5, // 5: goshare.spider.StockFinanceSystemService.NewAccount:output_type -> goshare.spider.NewAccountResp
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_service_proto_init() }
func file_service_proto_init() {
	if File_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyStockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyStockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SellStockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SellStockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewAccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewAccountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_proto_goTypes,
		DependencyIndexes: file_service_proto_depIdxs,
		MessageInfos:      file_service_proto_msgTypes,
	}.Build()
	File_service_proto = out.File
	file_service_proto_rawDesc = nil
	file_service_proto_goTypes = nil
	file_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// StockFinanceSystemServiceClient is the client API for StockFinanceSystemService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StockFinanceSystemServiceClient interface {
	BuyStock(ctx context.Context, in *BuyStockRequest, opts ...grpc.CallOption) (*BuyStockResponse, error)
	SellStock(ctx context.Context, in *SellStockRequest, opts ...grpc.CallOption) (*SellStockResponse, error)
	NewAccount(ctx context.Context, in *NewAccountReq, opts ...grpc.CallOption) (*NewAccountResp, error)
}

type stockFinanceSystemServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStockFinanceSystemServiceClient(cc grpc.ClientConnInterface) StockFinanceSystemServiceClient {
	return &stockFinanceSystemServiceClient{cc}
}

func (c *stockFinanceSystemServiceClient) BuyStock(ctx context.Context, in *BuyStockRequest, opts ...grpc.CallOption) (*BuyStockResponse, error) {
	out := new(BuyStockResponse)
	err := c.cc.Invoke(ctx, "/goshare.spider.StockFinanceSystemService/BuyStock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stockFinanceSystemServiceClient) SellStock(ctx context.Context, in *SellStockRequest, opts ...grpc.CallOption) (*SellStockResponse, error) {
	out := new(SellStockResponse)
	err := c.cc.Invoke(ctx, "/goshare.spider.StockFinanceSystemService/SellStock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stockFinanceSystemServiceClient) NewAccount(ctx context.Context, in *NewAccountReq, opts ...grpc.CallOption) (*NewAccountResp, error) {
	out := new(NewAccountResp)
	err := c.cc.Invoke(ctx, "/goshare.spider.StockFinanceSystemService/NewAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StockFinanceSystemServiceServer is the server API for StockFinanceSystemService service.
type StockFinanceSystemServiceServer interface {
	BuyStock(context.Context, *BuyStockRequest) (*BuyStockResponse, error)
	SellStock(context.Context, *SellStockRequest) (*SellStockResponse, error)
	NewAccount(context.Context, *NewAccountReq) (*NewAccountResp, error)
}

// UnimplementedStockFinanceSystemServiceServer can be embedded to have forward compatible implementations.
type UnimplementedStockFinanceSystemServiceServer struct {
}

func (*UnimplementedStockFinanceSystemServiceServer) BuyStock(context.Context, *BuyStockRequest) (*BuyStockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuyStock not implemented")
}
func (*UnimplementedStockFinanceSystemServiceServer) SellStock(context.Context, *SellStockRequest) (*SellStockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SellStock not implemented")
}
func (*UnimplementedStockFinanceSystemServiceServer) NewAccount(context.Context, *NewAccountReq) (*NewAccountResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewAccount not implemented")
}

func RegisterStockFinanceSystemServiceServer(s *grpc.Server, srv StockFinanceSystemServiceServer) {
	s.RegisterService(&_StockFinanceSystemService_serviceDesc, srv)
}

func _StockFinanceSystemService_BuyStock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuyStockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StockFinanceSystemServiceServer).BuyStock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goshare.spider.StockFinanceSystemService/BuyStock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StockFinanceSystemServiceServer).BuyStock(ctx, req.(*BuyStockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StockFinanceSystemService_SellStock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SellStockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StockFinanceSystemServiceServer).SellStock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goshare.spider.StockFinanceSystemService/SellStock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StockFinanceSystemServiceServer).SellStock(ctx, req.(*SellStockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StockFinanceSystemService_NewAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewAccountReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StockFinanceSystemServiceServer).NewAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goshare.spider.StockFinanceSystemService/NewAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StockFinanceSystemServiceServer).NewAccount(ctx, req.(*NewAccountReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _StockFinanceSystemService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "goshare.spider.StockFinanceSystemService",
	HandlerType: (*StockFinanceSystemServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BuyStock",
			Handler:    _StockFinanceSystemService_BuyStock_Handler,
		},
		{
			MethodName: "SellStock",
			Handler:    _StockFinanceSystemService_SellStock_Handler,
		},
		{
			MethodName: "NewAccount",
			Handler:    _StockFinanceSystemService_NewAccount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
