// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: logic.proto

package logic

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PushMsg_Type int32

const (
	PushMsg_PUSH      PushMsg_Type = 0
	PushMsg_ROOM      PushMsg_Type = 1
	PushMsg_BROADCAST PushMsg_Type = 2
)

// Enum value maps for PushMsg_Type.
var (
	PushMsg_Type_name = map[int32]string{
		0: "PUSH",
		1: "ROOM",
		2: "BROADCAST",
	}
	PushMsg_Type_value = map[string]int32{
		"PUSH":      0,
		"ROOM":      1,
		"BROADCAST": 2,
	}
)

func (x PushMsg_Type) Enum() *PushMsg_Type {
	p := new(PushMsg_Type)
	*p = x
	return p
}

func (x PushMsg_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PushMsg_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_logic_proto_enumTypes[0].Descriptor()
}

func (PushMsg_Type) Type() protoreflect.EnumType {
	return &file_logic_proto_enumTypes[0]
}

func (x PushMsg_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PushMsg_Type.Descriptor instead.
func (PushMsg_Type) EnumDescriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{1, 0}
}

//
// v0.0.2
// protocol
type Proto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// invariant
	Ver   int32 `protobuf:"varint,1,opt,name=ver,proto3" json:"ver,omitempty"`
	Crypt int32 `protobuf:"varint,2,opt,name=crypt,proto3" json:"crypt,omitempty"`
	Zip   int32 `protobuf:"varint,3,opt,name=zip,proto3" json:"zip,omitempty"`
	// change
	Op   int32  `protobuf:"varint,4,opt,name=op,proto3" json:"op,omitempty"`
	Seq  int32  `protobuf:"varint,5,opt,name=seq,proto3" json:"seq,omitempty"`
	Body []byte `protobuf:"bytes,6,opt,name=body,proto3" json:"body,omitempty"`
	// other
	Ext map[int32][]byte `protobuf:"bytes,7,rep,name=ext,proto3" json:"ext,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Proto) Reset() {
	*x = Proto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Proto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Proto) ProtoMessage() {}

func (x *Proto) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Proto.ProtoReflect.Descriptor instead.
func (*Proto) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{0}
}

func (x *Proto) GetVer() int32 {
	if x != nil {
		return x.Ver
	}
	return 0
}

func (x *Proto) GetCrypt() int32 {
	if x != nil {
		return x.Crypt
	}
	return 0
}

func (x *Proto) GetZip() int32 {
	if x != nil {
		return x.Zip
	}
	return 0
}

func (x *Proto) GetOp() int32 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *Proto) GetSeq() int32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *Proto) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *Proto) GetExt() map[int32][]byte {
	if x != nil {
		return x.Ext
	}
	return nil
}

type PushMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      PushMsg_Type   `protobuf:"varint,1,opt,name=type,proto3,enum=logic.PushMsg_Type" json:"type,omitempty"`
	Accepts   []string       `protobuf:"bytes,2,rep,name=accepts,proto3" json:"accepts,omitempty"`
	Speed     int32          `protobuf:"varint,3,opt,name=speed,proto3" json:"speed,omitempty"`
	Server    string         `protobuf:"bytes,4,opt,name=server,proto3" json:"server,omitempty"`
	Room      string         `protobuf:"bytes,5,opt,name=room,proto3" json:"room,omitempty"`
	Keys      []string       `protobuf:"bytes,6,rep,name=keys,proto3" json:"keys,omitempty"`
	Msg       []byte         `protobuf:"bytes,7,opt,name=msg,proto3" json:"msg,omitempty"`
	UidMap    map[int64]bool `protobuf:"bytes,8,rep,name=uid_map,json=uidMap,proto3" json:"uid_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	NotUidMap map[int64]bool `protobuf:"bytes,9,rep,name=not_uid_map,json=notUidMap,proto3" json:"not_uid_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Op        int32          `protobuf:"varint,10,opt,name=op,proto3" json:"op,omitempty"`
}

func (x *PushMsg) Reset() {
	*x = PushMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushMsg) ProtoMessage() {}

func (x *PushMsg) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushMsg.ProtoReflect.Descriptor instead.
func (*PushMsg) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{1}
}

func (x *PushMsg) GetType() PushMsg_Type {
	if x != nil {
		return x.Type
	}
	return PushMsg_PUSH
}

func (x *PushMsg) GetAccepts() []string {
	if x != nil {
		return x.Accepts
	}
	return nil
}

func (x *PushMsg) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *PushMsg) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *PushMsg) GetRoom() string {
	if x != nil {
		return x.Room
	}
	return ""
}

func (x *PushMsg) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *PushMsg) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *PushMsg) GetUidMap() map[int64]bool {
	if x != nil {
		return x.UidMap
	}
	return nil
}

func (x *PushMsg) GetNotUidMap() map[int64]bool {
	if x != nil {
		return x.NotUidMap
	}
	return nil
}

func (x *PushMsg) GetOp() int32 {
	if x != nil {
		return x.Op
	}
	return 0
}

type ConnectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server string `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	Cookie string `protobuf:"bytes,2,opt,name=cookie,proto3" json:"cookie,omitempty"`
	Body   []byte `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *ConnectReq) Reset() {
	*x = ConnectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectReq) ProtoMessage() {}

func (x *ConnectReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectReq.ProtoReflect.Descriptor instead.
func (*ConnectReq) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{2}
}

func (x *ConnectReq) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *ConnectReq) GetCookie() string {
	if x != nil {
		return x.Cookie
	}
	return ""
}

func (x *ConnectReq) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type ConnectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid       int64    `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Key       string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Gid       string   `protobuf:"bytes,3,opt,name=gid,proto3" json:"gid,omitempty"`
	RoomID    string   `protobuf:"bytes,4,opt,name=roomID,proto3" json:"roomID,omitempty"`
	Accepts   []string `protobuf:"bytes,5,rep,name=accepts,proto3" json:"accepts,omitempty"`
	Heartbeat int64    `protobuf:"varint,6,opt,name=heartbeat,proto3" json:"heartbeat,omitempty"`
}

func (x *ConnectReply) Reset() {
	*x = ConnectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectReply) ProtoMessage() {}

func (x *ConnectReply) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectReply.ProtoReflect.Descriptor instead.
func (*ConnectReply) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{3}
}

func (x *ConnectReply) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *ConnectReply) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ConnectReply) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *ConnectReply) GetRoomID() string {
	if x != nil {
		return x.RoomID
	}
	return ""
}

func (x *ConnectReply) GetAccepts() []string {
	if x != nil {
		return x.Accepts
	}
	return nil
}

func (x *ConnectReply) GetHeartbeat() int64 {
	if x != nil {
		return x.Heartbeat
	}
	return 0
}

type DisconnectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid    int64  `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Key    string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Server string `protobuf:"bytes,3,opt,name=server,proto3" json:"server,omitempty"`
	RoomId string `protobuf:"bytes,4,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
}

func (x *DisconnectReq) Reset() {
	*x = DisconnectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisconnectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectReq) ProtoMessage() {}

func (x *DisconnectReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectReq.ProtoReflect.Descriptor instead.
func (*DisconnectReq) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{4}
}

func (x *DisconnectReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *DisconnectReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DisconnectReq) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *DisconnectReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

type DisconnectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Has bool `protobuf:"varint,1,opt,name=has,proto3" json:"has,omitempty"`
}

func (x *DisconnectReply) Reset() {
	*x = DisconnectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisconnectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectReply) ProtoMessage() {}

func (x *DisconnectReply) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectReply.ProtoReflect.Descriptor instead.
func (*DisconnectReply) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{5}
}

func (x *DisconnectReply) GetHas() bool {
	if x != nil {
		return x.Has
	}
	return false
}

type HeartbeatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid    int64  `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Key    string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Server string `protobuf:"bytes,3,opt,name=server,proto3" json:"server,omitempty"`
	RoomId string `protobuf:"bytes,4,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
}

func (x *HeartbeatReq) Reset() {
	*x = HeartbeatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatReq) ProtoMessage() {}

func (x *HeartbeatReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatReq.ProtoReflect.Descriptor instead.
func (*HeartbeatReq) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{6}
}

func (x *HeartbeatReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *HeartbeatReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *HeartbeatReq) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *HeartbeatReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

type HeartbeatReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HeartbeatReply) Reset() {
	*x = HeartbeatReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatReply) ProtoMessage() {}

func (x *HeartbeatReply) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatReply.ProtoReflect.Descriptor instead.
func (*HeartbeatReply) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{7}
}

type ChangeRoomReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid       int64  `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Key       string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Server    string `protobuf:"bytes,3,opt,name=server,proto3" json:"server,omitempty"`
	RoomId    string `protobuf:"bytes,4,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	OldRoomId string `protobuf:"bytes,5,opt,name=old_room_id,json=oldRoomId,proto3" json:"old_room_id,omitempty"`
}

func (x *ChangeRoomReq) Reset() {
	*x = ChangeRoomReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeRoomReq) ProtoMessage() {}

func (x *ChangeRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeRoomReq.ProtoReflect.Descriptor instead.
func (*ChangeRoomReq) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{8}
}

func (x *ChangeRoomReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *ChangeRoomReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ChangeRoomReq) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *ChangeRoomReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ChangeRoomReq) GetOldRoomId() string {
	if x != nil {
		return x.OldRoomId
	}
	return ""
}

type ChangeRoomRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChangeRoomRes) Reset() {
	*x = ChangeRoomRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeRoomRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeRoomRes) ProtoMessage() {}

func (x *ChangeRoomRes) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeRoomRes.ProtoReflect.Descriptor instead.
func (*ChangeRoomRes) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{9}
}

type RidMidStampReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"` // 房间id
	Near   bool   `protobuf:"varint,2,opt,name=near,proto3" json:"near,omitempty"`                  // 决定返回的最近进房的stamp顺序
}

func (x *RidMidStampReq) Reset() {
	*x = RidMidStampReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RidMidStampReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RidMidStampReq) ProtoMessage() {}

func (x *RidMidStampReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RidMidStampReq.ProtoReflect.Descriptor instead.
func (*RidMidStampReq) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{10}
}

func (x *RidMidStampReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RidMidStampReq) GetNear() bool {
	if x != nil {
		return x.Near
	}
	return false
}

type RidMidStampRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MidStamp map[int64]int32 `protobuf:"bytes,1,rep,name=mid_stamp,json=midStamp,proto3" json:"mid_stamp,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // 返回用户id以及进房时间
}

func (x *RidMidStampRes) Reset() {
	*x = RidMidStampRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RidMidStampRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RidMidStampRes) ProtoMessage() {}

func (x *RidMidStampRes) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RidMidStampRes.ProtoReflect.Descriptor instead.
func (*RidMidStampRes) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{11}
}

func (x *RidMidStampRes) GetMidStamp() map[int64]int32 {
	if x != nil {
		return x.MidStamp
	}
	return nil
}

type OnlineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server    string           `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	RoomCount map[string]int32 `protobuf:"bytes,2,rep,name=roomCount,proto3" json:"roomCount,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *OnlineReq) Reset() {
	*x = OnlineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineReq) ProtoMessage() {}

func (x *OnlineReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineReq.ProtoReflect.Descriptor instead.
func (*OnlineReq) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{12}
}

func (x *OnlineReq) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *OnlineReq) GetRoomCount() map[string]int32 {
	if x != nil {
		return x.RoomCount
	}
	return nil
}

type OnlineReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllRoomCount map[string]int32 `protobuf:"bytes,1,rep,name=allRoomCount,proto3" json:"allRoomCount,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *OnlineReply) Reset() {
	*x = OnlineReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineReply) ProtoMessage() {}

func (x *OnlineReply) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineReply.ProtoReflect.Descriptor instead.
func (*OnlineReply) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{13}
}

func (x *OnlineReply) GetAllRoomCount() map[string]int32 {
	if x != nil {
		return x.AllRoomCount
	}
	return nil
}

type ReceiveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid   int64  `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Proto *Proto `protobuf:"bytes,2,opt,name=proto,proto3" json:"proto,omitempty"`
}

func (x *ReceiveReq) Reset() {
	*x = ReceiveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveReq) ProtoMessage() {}

func (x *ReceiveReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveReq.ProtoReflect.Descriptor instead.
func (*ReceiveReq) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{14}
}

func (x *ReceiveReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *ReceiveReq) GetProto() *Proto {
	if x != nil {
		return x.Proto
	}
	return nil
}

type ReceiveReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReceiveReply) Reset() {
	*x = ReceiveReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveReply) ProtoMessage() {}

func (x *ReceiveReply) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveReply.ProtoReflect.Descriptor instead.
func (*ReceiveReply) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{15}
}

type NodesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform string `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
	ClientIP string `protobuf:"bytes,2,opt,name=clientIP,proto3" json:"clientIP,omitempty"`
}

func (x *NodesReq) Reset() {
	*x = NodesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodesReq) ProtoMessage() {}

func (x *NodesReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodesReq.ProtoReflect.Descriptor instead.
func (*NodesReq) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{16}
}

func (x *NodesReq) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *NodesReq) GetClientIP() string {
	if x != nil {
		return x.ClientIP
	}
	return ""
}

type NodesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain       string   `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	TcpPort      int32    `protobuf:"varint,2,opt,name=tcp_port,json=tcpPort,proto3" json:"tcp_port,omitempty"`
	WsPort       int32    `protobuf:"varint,3,opt,name=ws_port,json=wsPort,proto3" json:"ws_port,omitempty"`
	WssPort      int32    `protobuf:"varint,4,opt,name=wss_port,json=wssPort,proto3" json:"wss_port,omitempty"`
	Heartbeat    int32    `protobuf:"varint,5,opt,name=heartbeat,proto3" json:"heartbeat,omitempty"`
	Nodes        []string `protobuf:"bytes,6,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Backoff      *Backoff `protobuf:"bytes,7,opt,name=backoff,proto3" json:"backoff,omitempty"`
	HeartbeatMax int32    `protobuf:"varint,8,opt,name=heartbeat_max,json=heartbeatMax,proto3" json:"heartbeat_max,omitempty"`
}

func (x *NodesReply) Reset() {
	*x = NodesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodesReply) ProtoMessage() {}

func (x *NodesReply) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodesReply.ProtoReflect.Descriptor instead.
func (*NodesReply) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{17}
}

func (x *NodesReply) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *NodesReply) GetTcpPort() int32 {
	if x != nil {
		return x.TcpPort
	}
	return 0
}

func (x *NodesReply) GetWsPort() int32 {
	if x != nil {
		return x.WsPort
	}
	return 0
}

func (x *NodesReply) GetWssPort() int32 {
	if x != nil {
		return x.WssPort
	}
	return 0
}

func (x *NodesReply) GetHeartbeat() int32 {
	if x != nil {
		return x.Heartbeat
	}
	return 0
}

func (x *NodesReply) GetNodes() []string {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *NodesReply) GetBackoff() *Backoff {
	if x != nil {
		return x.Backoff
	}
	return nil
}

func (x *NodesReply) GetHeartbeatMax() int32 {
	if x != nil {
		return x.HeartbeatMax
	}
	return 0
}

type Backoff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxDelay  int32   `protobuf:"varint,1,opt,name=max_delay,json=maxDelay,proto3" json:"max_delay,omitempty"`
	BaseDelay int32   `protobuf:"varint,2,opt,name=base_delay,json=baseDelay,proto3" json:"base_delay,omitempty"`
	Factor    float32 `protobuf:"fixed32,3,opt,name=factor,proto3" json:"factor,omitempty"`
	Jitter    float32 `protobuf:"fixed32,4,opt,name=jitter,proto3" json:"jitter,omitempty"`
}

func (x *Backoff) Reset() {
	*x = Backoff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Backoff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Backoff) ProtoMessage() {}

func (x *Backoff) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Backoff.ProtoReflect.Descriptor instead.
func (*Backoff) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{18}
}

func (x *Backoff) GetMaxDelay() int32 {
	if x != nil {
		return x.MaxDelay
	}
	return 0
}

func (x *Backoff) GetBaseDelay() int32 {
	if x != nil {
		return x.BaseDelay
	}
	return 0
}

func (x *Backoff) GetFactor() float32 {
	if x != nil {
		return x.Factor
	}
	return 0
}

func (x *Backoff) GetJitter() float32 {
	if x != nil {
		return x.Jitter
	}
	return 0
}

type PushUsersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []int64  `protobuf:"varint,1,rep,packed,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	Body    []byte   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	RoomId  string   `protobuf:"bytes,3,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Accepts []string `protobuf:"bytes,4,rep,name=accepts,proto3" json:"accepts,omitempty"`
}

func (x *PushUsersReq) Reset() {
	*x = PushUsersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushUsersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushUsersReq) ProtoMessage() {}

func (x *PushUsersReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushUsersReq.ProtoReflect.Descriptor instead.
func (*PushUsersReq) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{19}
}

func (x *PushUsersReq) GetUserIds() []int64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *PushUsersReq) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *PushUsersReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *PushUsersReq) GetAccepts() []string {
	if x != nil {
		return x.Accepts
	}
	return nil
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Cluster string `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{20}
}

func (x *UserInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserInfo) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

type PushUsersReliablyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users   []*UserInfo `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	Body    []byte      `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Accepts []string    `protobuf:"bytes,3,rep,name=accepts,proto3" json:"accepts,omitempty"`
}

func (x *PushUsersReliablyReq) Reset() {
	*x = PushUsersReliablyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushUsersReliablyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushUsersReliablyReq) ProtoMessage() {}

func (x *PushUsersReliablyReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushUsersReliablyReq.ProtoReflect.Descriptor instead.
func (*PushUsersReliablyReq) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{21}
}

func (x *PushUsersReliablyReq) GetUsers() []*UserInfo {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *PushUsersReliablyReq) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *PushUsersReliablyReq) GetAccepts() []string {
	if x != nil {
		return x.Accepts
	}
	return nil
}

type PushTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accepts   []string       `protobuf:"bytes,1,rep,name=accepts,proto3" json:"accepts,omitempty"`
	Body      []byte         `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	RoomId    string         `protobuf:"bytes,3,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	UidMap    map[int64]bool `protobuf:"bytes,4,rep,name=uid_map,json=uidMap,proto3" json:"uid_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	NotUidMap map[int64]bool `protobuf:"bytes,5,rep,name=not_uid_map,json=notUidMap,proto3" json:"not_uid_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *PushTagReq) Reset() {
	*x = PushTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushTagReq) ProtoMessage() {}

func (x *PushTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushTagReq.ProtoReflect.Descriptor instead.
func (*PushTagReq) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{22}
}

func (x *PushTagReq) GetAccepts() []string {
	if x != nil {
		return x.Accepts
	}
	return nil
}

func (x *PushTagReq) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *PushTagReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *PushTagReq) GetUidMap() map[int64]bool {
	if x != nil {
		return x.UidMap
	}
	return nil
}

func (x *PushTagReq) GetNotUidMap() map[int64]bool {
	if x != nil {
		return x.NotUidMap
	}
	return nil
}

type PushAllReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accepts []string `protobuf:"bytes,1,rep,name=accepts,proto3" json:"accepts,omitempty"`
	Speed   int32    `protobuf:"varint,2,opt,name=speed,proto3" json:"speed,omitempty"`
	Body    []byte   `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *PushAllReq) Reset() {
	*x = PushAllReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushAllReq) ProtoMessage() {}

func (x *PushAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushAllReq.ProtoReflect.Descriptor instead.
func (*PushAllReq) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{23}
}

func (x *PushAllReq) GetAccepts() []string {
	if x != nil {
		return x.Accepts
	}
	return nil
}

func (x *PushAllReq) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *PushAllReq) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type CommonRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommonRsp) Reset() {
	*x = CommonRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonRsp) ProtoMessage() {}

func (x *CommonRsp) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonRsp.ProtoReflect.Descriptor instead.
func (*CommonRsp) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{24}
}

type OnlineRoomCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId       []string `protobuf:"bytes,1,rep,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	IncludeGuest bool     `protobuf:"varint,2,opt,name=includeGuest,proto3" json:"includeGuest,omitempty"`
}

func (x *OnlineRoomCountReq) Reset() {
	*x = OnlineRoomCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineRoomCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineRoomCountReq) ProtoMessage() {}

func (x *OnlineRoomCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineRoomCountReq.ProtoReflect.Descriptor instead.
func (*OnlineRoomCountReq) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{25}
}

func (x *OnlineRoomCountReq) GetRoomId() []string {
	if x != nil {
		return x.RoomId
	}
	return nil
}

func (x *OnlineRoomCountReq) GetIncludeGuest() bool {
	if x != nil {
		return x.IncludeGuest
	}
	return false
}

type OnlineRoomCountRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlineRoomList []*OnlineRoomCount `protobuf:"bytes,1,rep,name=OnlineRoomList,proto3" json:"OnlineRoomList,omitempty"`
}

func (x *OnlineRoomCountRsp) Reset() {
	*x = OnlineRoomCountRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineRoomCountRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineRoomCountRsp) ProtoMessage() {}

func (x *OnlineRoomCountRsp) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineRoomCountRsp.ProtoReflect.Descriptor instead.
func (*OnlineRoomCountRsp) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{26}
}

func (x *OnlineRoomCountRsp) GetOnlineRoomList() []*OnlineRoomCount {
	if x != nil {
		return x.OnlineRoomList
	}
	return nil
}

type OnlineRoomCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Count  int64  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *OnlineRoomCount) Reset() {
	*x = OnlineRoomCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineRoomCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineRoomCount) ProtoMessage() {}

func (x *OnlineRoomCount) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineRoomCount.ProtoReflect.Descriptor instead.
func (*OnlineRoomCount) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{27}
}

func (x *OnlineRoomCount) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *OnlineRoomCount) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetUserOnlineStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []int64 `protobuf:"varint,1,rep,packed,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	RoomId  string  `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
}

func (x *GetUserOnlineStatusReq) Reset() {
	*x = GetUserOnlineStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserOnlineStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserOnlineStatusReq) ProtoMessage() {}

func (x *GetUserOnlineStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserOnlineStatusReq.ProtoReflect.Descriptor instead.
func (*GetUserOnlineStatusReq) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{28}
}

func (x *GetUserOnlineStatusReq) GetUserIds() []int64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *GetUserOnlineStatusReq) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

type GetUserOnlineStatusRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity []*UserOnlineStatus `protobuf:"bytes,1,rep,name=entity,proto3" json:"entity,omitempty"`
}

func (x *GetUserOnlineStatusRsp) Reset() {
	*x = GetUserOnlineStatusRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserOnlineStatusRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserOnlineStatusRsp) ProtoMessage() {}

func (x *GetUserOnlineStatusRsp) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserOnlineStatusRsp.ProtoReflect.Descriptor instead.
func (*GetUserOnlineStatusRsp) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{29}
}

func (x *GetUserOnlineStatusRsp) GetEntity() []*UserOnlineStatus {
	if x != nil {
		return x.Entity
	}
	return nil
}

type UserOnlineStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsOnline bool  `protobuf:"varint,2,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
}

func (x *UserOnlineStatus) Reset() {
	*x = UserOnlineStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserOnlineStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOnlineStatus) ProtoMessage() {}

func (x *UserOnlineStatus) ProtoReflect() protoreflect.Message {
	mi := &file_logic_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOnlineStatus.ProtoReflect.Descriptor instead.
func (*UserOnlineStatus) Descriptor() ([]byte, []int) {
	return file_logic_proto_rawDescGZIP(), []int{30}
}

func (x *UserOnlineStatus) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserOnlineStatus) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

var File_logic_proto protoreflect.FileDescriptor

var file_logic_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x22, 0xd8, 0x01, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10,
	0x0a, 0x03, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x76, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x72, 0x79, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x72, 0x79, 0x70, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x7a, 0x69, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x7a, 0x69, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x27,
	0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x78, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x03, 0x65, 0x78, 0x74, 0x1a, 0x36, 0x0a, 0x08, 0x45, 0x78, 0x74, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xdc, 0x03, 0x0a, 0x07, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x73, 0x67, 0x12, 0x27, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6c, 0x6f, 0x67, 0x69,
	0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x73, 0x67, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73,
	0x70, 0x65, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d,
	0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x6b, 0x65, 0x79, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x33, 0x0a, 0x07, 0x75, 0x69, 0x64, 0x5f, 0x6d, 0x61,
	0x70, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e,
	0x50, 0x75, 0x73, 0x68, 0x4d, 0x73, 0x67, 0x2e, 0x55, 0x69, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x75, 0x69, 0x64, 0x4d, 0x61, 0x70, 0x12, 0x3d, 0x0a, 0x0b, 0x6e,
	0x6f, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x73, 0x67,
	0x2e, 0x4e, 0x6f, 0x74, 0x55, 0x69, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x09, 0x6e, 0x6f, 0x74, 0x55, 0x69, 0x64, 0x4d, 0x61, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x6f, 0x70, 0x1a, 0x39, 0x0a, 0x0b, 0x55, 0x69,
	0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3c, 0x0a, 0x0e, 0x4e, 0x6f, 0x74, 0x55, 0x69, 0x64, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x29, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x50,
	0x55, 0x53, 0x48, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x4f, 0x4f, 0x4d, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x10, 0x02, 0x22, 0x50,
	0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x22, 0x94, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x6d, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x68, 0x65,
	0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x22, 0x64, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x23, 0x0a,
	0x0f, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x68, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x68,
	0x61, 0x73, 0x22, 0x63, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6d, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x84, 0x01, 0x0a, 0x0d, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0b, 0x6f, 0x6c, 0x64, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x6c, 0x64, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64,
	0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
	0x73, 0x22, 0x3d, 0x0a, 0x0e, 0x52, 0x69, 0x64, 0x4d, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6e, 0x65, 0x61, 0x72,
	0x22, 0x8f, 0x01, 0x0a, 0x0e, 0x52, 0x69, 0x64, 0x4d, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x09, 0x6d, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x52,
	0x69, 0x64, 0x4d, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x73, 0x2e, 0x4d, 0x69,
	0x64, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x69, 0x64,
	0x53, 0x74, 0x61, 0x6d, 0x70, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6d,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xa0, 0x01, 0x0a, 0x09, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x52, 0x6f,
	0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x72, 0x6f,
	0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x3c, 0x0a, 0x0e, 0x52, 0x6f, 0x6f, 0x6d, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x98, 0x01, 0x0a, 0x0b, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x48, 0x0a, 0x0c, 0x61, 0x6c, 0x6c, 0x52, 0x6f, 0x6f, 0x6d,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a,
	0x3f, 0x0a, 0x11, 0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x42, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64,
	0x12, 0x22, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0e, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x42, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x50, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x50, 0x22, 0xf6, 0x01, 0x0a, 0x0a, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x63, 0x70, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x74, 0x63, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x73,
	0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x73, 0x50,
	0x6f, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x73, 0x73, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x77, 0x73, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x12, 0x28, 0x0a, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x42, 0x61, 0x63, 0x6b,
	0x6f, 0x66, 0x66, 0x52, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x12, 0x23, 0x0a, 0x0d,
	0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x4d, 0x61,
	0x78, 0x22, 0x75, 0x0a, 0x07, 0x42, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x61, 0x78, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62,
	0x61, 0x73, 0x65, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x6a, 0x69, 0x74, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x6a, 0x69, 0x74, 0x74, 0x65, 0x72, 0x22, 0x70, 0x0a, 0x0c, 0x50, 0x75, 0x73, 0x68,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x22, 0x3d, 0x0a, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22, 0x6b, 0x0a, 0x14, 0x50, 0x75, 0x73,
	0x68, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x6c, 0x69, 0x61, 0x62, 0x6c, 0x79, 0x52, 0x65,
	0x71, 0x12, 0x25, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x22, 0xc6, 0x02, 0x0a, 0x0a, 0x50, 0x75, 0x73, 0x68, 0x54,
	0x61, 0x67, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x07,
	0x75, 0x69, 0x64, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71,
	0x2e, 0x55, 0x69, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x75, 0x69,
	0x64, 0x4d, 0x61, 0x70, 0x12, 0x40, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x5f,
	0x6d, 0x61, 0x70, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6c, 0x6f, 0x67, 0x69,
	0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x2e, 0x4e, 0x6f, 0x74,
	0x55, 0x69, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x6e, 0x6f, 0x74,
	0x55, 0x69, 0x64, 0x4d, 0x61, 0x70, 0x1a, 0x39, 0x0a, 0x0b, 0x55, 0x69, 0x64, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x3c, 0x0a, 0x0e, 0x4e, 0x6f, 0x74, 0x55, 0x69, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x50, 0x0a, 0x0a, 0x50, 0x75, 0x73, 0x68, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x22, 0x0b, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x22, 0x51,
	0x0a, 0x12, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x47, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x47, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x54, 0x0a, 0x12, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x6f,
	0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x40, 0x0a, 0x0f, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f,
	0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f,
	0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4c, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x73,
	0x70, 0x12, 0x2f, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x22, 0x48, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x32, 0xda, 0x07, 0x0a,
	0x05, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x12, 0x31, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x12, 0x11, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3a, 0x0a, 0x0a, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x14, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x37, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65,
	0x61, 0x74, 0x12, 0x13, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38,
	0x0a, 0x0a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x14, 0x2e, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52,
	0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x52, 0x69, 0x64, 0x4d,
	0x69, 0x64, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x15, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e,
	0x52, 0x69, 0x64, 0x4d, 0x69, 0x64, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x15,
	0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x52, 0x69, 0x64, 0x4d, 0x69, 0x64, 0x53, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x0b, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x10, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x31, 0x0a, 0x07, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x11, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63,
	0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2b, 0x0a,
	0x05, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x0f, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x09, 0x50, 0x75,
	0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x13, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e,
	0x50, 0x75, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x42,
	0x0a, 0x11, 0x50, 0x75, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x6c, 0x69, 0x61,
	0x62, 0x6c, 0x79, 0x12, 0x1b, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x6c, 0x69, 0x61, 0x62, 0x6c, 0x79, 0x52, 0x65, 0x71,
	0x1a, 0x10, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x73, 0x70, 0x12, 0x2e, 0x0a, 0x07, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61, 0x67, 0x12, 0x11, 0x2e,
	0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71,
	0x1a, 0x10, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x73, 0x70, 0x12, 0x2e, 0x0a, 0x07, 0x50, 0x75, 0x73, 0x68, 0x41, 0x6c, 0x6c, 0x12, 0x11, 0x2e,
	0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x1a, 0x10, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x73, 0x70, 0x12, 0x47, 0x0a, 0x0f, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x6f, 0x6f, 0x6d,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x19, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x1d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x73, 0x70,
	0x12, 0x39, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x50, 0x75, 0x73, 0x68, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x12, 0x13, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x50, 0x75, 0x73,
	0x68, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x6c, 0x6f, 0x67, 0x69,
	0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0e, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61, 0x67, 0x12, 0x11, 0x2e,
	0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71,
	0x1a, 0x10, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x73, 0x70, 0x12, 0x35, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x50, 0x75, 0x73,
	0x68, 0x41, 0x6c, 0x6c, 0x12, 0x11, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x50, 0x75, 0x73,
	0x68, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x52, 0x61, 0x76, 0x65, 0x6e, 0x48, 0x75, 0x6f,
	0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x77, 0x73, 0x2d, 0x69, 0x6d, 0x2d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_logic_proto_rawDescOnce sync.Once
	file_logic_proto_rawDescData = file_logic_proto_rawDesc
)

func file_logic_proto_rawDescGZIP() []byte {
	file_logic_proto_rawDescOnce.Do(func() {
		file_logic_proto_rawDescData = protoimpl.X.CompressGZIP(file_logic_proto_rawDescData)
	})
	return file_logic_proto_rawDescData
}

var file_logic_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_logic_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_logic_proto_goTypes = []interface{}{
	(PushMsg_Type)(0),              // 0: logic.PushMsg.Type
	(*Proto)(nil),                  // 1: logic.Proto
	(*PushMsg)(nil),                // 2: logic.PushMsg
	(*ConnectReq)(nil),             // 3: logic.ConnectReq
	(*ConnectReply)(nil),           // 4: logic.ConnectReply
	(*DisconnectReq)(nil),          // 5: logic.DisconnectReq
	(*DisconnectReply)(nil),        // 6: logic.DisconnectReply
	(*HeartbeatReq)(nil),           // 7: logic.HeartbeatReq
	(*HeartbeatReply)(nil),         // 8: logic.HeartbeatReply
	(*ChangeRoomReq)(nil),          // 9: logic.ChangeRoomReq
	(*ChangeRoomRes)(nil),          // 10: logic.ChangeRoomRes
	(*RidMidStampReq)(nil),         // 11: logic.RidMidStampReq
	(*RidMidStampRes)(nil),         // 12: logic.RidMidStampRes
	(*OnlineReq)(nil),              // 13: logic.OnlineReq
	(*OnlineReply)(nil),            // 14: logic.OnlineReply
	(*ReceiveReq)(nil),             // 15: logic.ReceiveReq
	(*ReceiveReply)(nil),           // 16: logic.ReceiveReply
	(*NodesReq)(nil),               // 17: logic.NodesReq
	(*NodesReply)(nil),             // 18: logic.NodesReply
	(*Backoff)(nil),                // 19: logic.Backoff
	(*PushUsersReq)(nil),           // 20: logic.PushUsersReq
	(*UserInfo)(nil),               // 21: logic.UserInfo
	(*PushUsersReliablyReq)(nil),   // 22: logic.PushUsersReliablyReq
	(*PushTagReq)(nil),             // 23: logic.PushTagReq
	(*PushAllReq)(nil),             // 24: logic.PushAllReq
	(*CommonRsp)(nil),              // 25: logic.CommonRsp
	(*OnlineRoomCountReq)(nil),     // 26: logic.OnlineRoomCountReq
	(*OnlineRoomCountRsp)(nil),     // 27: logic.OnlineRoomCountRsp
	(*OnlineRoomCount)(nil),        // 28: logic.OnlineRoomCount
	(*GetUserOnlineStatusReq)(nil), // 29: logic.GetUserOnlineStatusReq
	(*GetUserOnlineStatusRsp)(nil), // 30: logic.GetUserOnlineStatusRsp
	(*UserOnlineStatus)(nil),       // 31: logic.UserOnlineStatus
	nil,                            // 32: logic.Proto.ExtEntry
	nil,                            // 33: logic.PushMsg.UidMapEntry
	nil,                            // 34: logic.PushMsg.NotUidMapEntry
	nil,                            // 35: logic.RidMidStampRes.MidStampEntry
	nil,                            // 36: logic.OnlineReq.RoomCountEntry
	nil,                            // 37: logic.OnlineReply.AllRoomCountEntry
	nil,                            // 38: logic.PushTagReq.UidMapEntry
	nil,                            // 39: logic.PushTagReq.NotUidMapEntry
}
var file_logic_proto_depIdxs = []int32{
	32, // 0: logic.Proto.ext:type_name -> logic.Proto.ExtEntry
	0,  // 1: logic.PushMsg.type:type_name -> logic.PushMsg.Type
	33, // 2: logic.PushMsg.uid_map:type_name -> logic.PushMsg.UidMapEntry
	34, // 3: logic.PushMsg.not_uid_map:type_name -> logic.PushMsg.NotUidMapEntry
	35, // 4: logic.RidMidStampRes.mid_stamp:type_name -> logic.RidMidStampRes.MidStampEntry
	36, // 5: logic.OnlineReq.roomCount:type_name -> logic.OnlineReq.RoomCountEntry
	37, // 6: logic.OnlineReply.allRoomCount:type_name -> logic.OnlineReply.AllRoomCountEntry
	1,  // 7: logic.ReceiveReq.proto:type_name -> logic.Proto
	19, // 8: logic.NodesReply.backoff:type_name -> logic.Backoff
	21, // 9: logic.PushUsersReliablyReq.users:type_name -> logic.UserInfo
	38, // 10: logic.PushTagReq.uid_map:type_name -> logic.PushTagReq.UidMapEntry
	39, // 11: logic.PushTagReq.not_uid_map:type_name -> logic.PushTagReq.NotUidMapEntry
	28, // 12: logic.OnlineRoomCountRsp.OnlineRoomList:type_name -> logic.OnlineRoomCount
	31, // 13: logic.GetUserOnlineStatusRsp.entity:type_name -> logic.UserOnlineStatus
	3,  // 14: logic.Logic.Connect:input_type -> logic.ConnectReq
	5,  // 15: logic.Logic.Disconnect:input_type -> logic.DisconnectReq
	7,  // 16: logic.Logic.Heartbeat:input_type -> logic.HeartbeatReq
	9,  // 17: logic.Logic.ChangeRoom:input_type -> logic.ChangeRoomReq
	11, // 18: logic.Logic.RidMidStamp:input_type -> logic.RidMidStampReq
	13, // 19: logic.Logic.RenewOnline:input_type -> logic.OnlineReq
	15, // 20: logic.Logic.Receive:input_type -> logic.ReceiveReq
	17, // 21: logic.Logic.Nodes:input_type -> logic.NodesReq
	20, // 22: logic.Logic.PushUsers:input_type -> logic.PushUsersReq
	22, // 23: logic.Logic.PushUsersReliably:input_type -> logic.PushUsersReliablyReq
	23, // 24: logic.Logic.PushTag:input_type -> logic.PushTagReq
	24, // 25: logic.Logic.PushAll:input_type -> logic.PushAllReq
	26, // 26: logic.Logic.OnlineRoomCount:input_type -> logic.OnlineRoomCountReq
	29, // 27: logic.Logic.GetUserOnlineStatus:input_type -> logic.GetUserOnlineStatusReq
	20, // 28: logic.Logic.ReceivePushUsers:input_type -> logic.PushUsersReq
	23, // 29: logic.Logic.ReceivePushTag:input_type -> logic.PushTagReq
	24, // 30: logic.Logic.ReceivePushAll:input_type -> logic.PushAllReq
	4,  // 31: logic.Logic.Connect:output_type -> logic.ConnectReply
	6,  // 32: logic.Logic.Disconnect:output_type -> logic.DisconnectReply
	8,  // 33: logic.Logic.Heartbeat:output_type -> logic.HeartbeatReply
	10, // 34: logic.Logic.ChangeRoom:output_type -> logic.ChangeRoomRes
	12, // 35: logic.Logic.RidMidStamp:output_type -> logic.RidMidStampRes
	14, // 36: logic.Logic.RenewOnline:output_type -> logic.OnlineReply
	16, // 37: logic.Logic.Receive:output_type -> logic.ReceiveReply
	18, // 38: logic.Logic.Nodes:output_type -> logic.NodesReply
	25, // 39: logic.Logic.PushUsers:output_type -> logic.CommonRsp
	25, // 40: logic.Logic.PushUsersReliably:output_type -> logic.CommonRsp
	25, // 41: logic.Logic.PushTag:output_type -> logic.CommonRsp
	25, // 42: logic.Logic.PushAll:output_type -> logic.CommonRsp
	27, // 43: logic.Logic.OnlineRoomCount:output_type -> logic.OnlineRoomCountRsp
	30, // 44: logic.Logic.GetUserOnlineStatus:output_type -> logic.GetUserOnlineStatusRsp
	25, // 45: logic.Logic.ReceivePushUsers:output_type -> logic.CommonRsp
	25, // 46: logic.Logic.ReceivePushTag:output_type -> logic.CommonRsp
	25, // 47: logic.Logic.ReceivePushAll:output_type -> logic.CommonRsp
	31, // [31:48] is the sub-list for method output_type
	14, // [14:31] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_logic_proto_init() }
func file_logic_proto_init() {
	if File_logic_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_logic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Proto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisconnectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisconnectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeRoomReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeRoomRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RidMidStampReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RidMidStampRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Backoff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushUsersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushUsersReliablyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushAllReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineRoomCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineRoomCountRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineRoomCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserOnlineStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserOnlineStatusRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserOnlineStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_logic_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_logic_proto_goTypes,
		DependencyIndexes: file_logic_proto_depIdxs,
		EnumInfos:         file_logic_proto_enumTypes,
		MessageInfos:      file_logic_proto_msgTypes,
	}.Build()
	File_logic_proto = out.File
	file_logic_proto_rawDesc = nil
	file_logic_proto_goTypes = nil
	file_logic_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LogicClient is the client API for Logic service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogicClient interface {
	// Connect
	Connect(ctx context.Context, in *ConnectReq, opts ...grpc.CallOption) (*ConnectReply, error)
	// Disconnect
	Disconnect(ctx context.Context, in *DisconnectReq, opts ...grpc.CallOption) (*DisconnectReply, error)
	// Heartbeat
	Heartbeat(ctx context.Context, in *HeartbeatReq, opts ...grpc.CallOption) (*HeartbeatReply, error)
	// ChangeRoom
	ChangeRoom(ctx context.Context, in *ChangeRoomReq, opts ...grpc.CallOption) (*ChangeRoomRes, error)
	// RidMidStamp
	RidMidStamp(ctx context.Context, in *RidMidStampReq, opts ...grpc.CallOption) (*RidMidStampRes, error)
	// RenewOnline
	RenewOnline(ctx context.Context, in *OnlineReq, opts ...grpc.CallOption) (*OnlineReply, error)
	// Receive
	Receive(ctx context.Context, in *ReceiveReq, opts ...grpc.CallOption) (*ReceiveReply, error)
	// ServerList
	Nodes(ctx context.Context, in *NodesReq, opts ...grpc.CallOption) (*NodesReply, error)
	// Push Msg
	PushUsers(ctx context.Context, in *PushUsersReq, opts ...grpc.CallOption) (*CommonRsp, error)
	PushUsersReliably(ctx context.Context, in *PushUsersReliablyReq, opts ...grpc.CallOption) (*CommonRsp, error)
	PushTag(ctx context.Context, in *PushTagReq, opts ...grpc.CallOption) (*CommonRsp, error)
	PushAll(ctx context.Context, in *PushAllReq, opts ...grpc.CallOption) (*CommonRsp, error)
	OnlineRoomCount(ctx context.Context, in *OnlineRoomCountReq, opts ...grpc.CallOption) (*OnlineRoomCountRsp, error)
	GetUserOnlineStatus(ctx context.Context, in *GetUserOnlineStatusReq, opts ...grpc.CallOption) (*GetUserOnlineStatusRsp, error)
	// Forward Msg Api
	ReceivePushUsers(ctx context.Context, in *PushUsersReq, opts ...grpc.CallOption) (*CommonRsp, error)
	ReceivePushTag(ctx context.Context, in *PushTagReq, opts ...grpc.CallOption) (*CommonRsp, error)
	ReceivePushAll(ctx context.Context, in *PushAllReq, opts ...grpc.CallOption) (*CommonRsp, error)
}

type logicClient struct {
	cc grpc.ClientConnInterface
}

func NewLogicClient(cc grpc.ClientConnInterface) LogicClient {
	return &logicClient{cc}
}

func (c *logicClient) Connect(ctx context.Context, in *ConnectReq, opts ...grpc.CallOption) (*ConnectReply, error) {
	out := new(ConnectReply)
	err := c.cc.Invoke(ctx, "/logic.Logic/Connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicClient) Disconnect(ctx context.Context, in *DisconnectReq, opts ...grpc.CallOption) (*DisconnectReply, error) {
	out := new(DisconnectReply)
	err := c.cc.Invoke(ctx, "/logic.Logic/Disconnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicClient) Heartbeat(ctx context.Context, in *HeartbeatReq, opts ...grpc.CallOption) (*HeartbeatReply, error) {
	out := new(HeartbeatReply)
	err := c.cc.Invoke(ctx, "/logic.Logic/Heartbeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicClient) ChangeRoom(ctx context.Context, in *ChangeRoomReq, opts ...grpc.CallOption) (*ChangeRoomRes, error) {
	out := new(ChangeRoomRes)
	err := c.cc.Invoke(ctx, "/logic.Logic/ChangeRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicClient) RidMidStamp(ctx context.Context, in *RidMidStampReq, opts ...grpc.CallOption) (*RidMidStampRes, error) {
	out := new(RidMidStampRes)
	err := c.cc.Invoke(ctx, "/logic.Logic/RidMidStamp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicClient) RenewOnline(ctx context.Context, in *OnlineReq, opts ...grpc.CallOption) (*OnlineReply, error) {
	out := new(OnlineReply)
	err := c.cc.Invoke(ctx, "/logic.Logic/RenewOnline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicClient) Receive(ctx context.Context, in *ReceiveReq, opts ...grpc.CallOption) (*ReceiveReply, error) {
	out := new(ReceiveReply)
	err := c.cc.Invoke(ctx, "/logic.Logic/Receive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicClient) Nodes(ctx context.Context, in *NodesReq, opts ...grpc.CallOption) (*NodesReply, error) {
	out := new(NodesReply)
	err := c.cc.Invoke(ctx, "/logic.Logic/Nodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicClient) PushUsers(ctx context.Context, in *PushUsersReq, opts ...grpc.CallOption) (*CommonRsp, error) {
	out := new(CommonRsp)
	err := c.cc.Invoke(ctx, "/logic.Logic/PushUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicClient) PushUsersReliably(ctx context.Context, in *PushUsersReliablyReq, opts ...grpc.CallOption) (*CommonRsp, error) {
	out := new(CommonRsp)
	err := c.cc.Invoke(ctx, "/logic.Logic/PushUsersReliably", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicClient) PushTag(ctx context.Context, in *PushTagReq, opts ...grpc.CallOption) (*CommonRsp, error) {
	out := new(CommonRsp)
	err := c.cc.Invoke(ctx, "/logic.Logic/PushTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicClient) PushAll(ctx context.Context, in *PushAllReq, opts ...grpc.CallOption) (*CommonRsp, error) {
	out := new(CommonRsp)
	err := c.cc.Invoke(ctx, "/logic.Logic/PushAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicClient) OnlineRoomCount(ctx context.Context, in *OnlineRoomCountReq, opts ...grpc.CallOption) (*OnlineRoomCountRsp, error) {
	out := new(OnlineRoomCountRsp)
	err := c.cc.Invoke(ctx, "/logic.Logic/OnlineRoomCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicClient) GetUserOnlineStatus(ctx context.Context, in *GetUserOnlineStatusReq, opts ...grpc.CallOption) (*GetUserOnlineStatusRsp, error) {
	out := new(GetUserOnlineStatusRsp)
	err := c.cc.Invoke(ctx, "/logic.Logic/GetUserOnlineStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicClient) ReceivePushUsers(ctx context.Context, in *PushUsersReq, opts ...grpc.CallOption) (*CommonRsp, error) {
	out := new(CommonRsp)
	err := c.cc.Invoke(ctx, "/logic.Logic/ReceivePushUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicClient) ReceivePushTag(ctx context.Context, in *PushTagReq, opts ...grpc.CallOption) (*CommonRsp, error) {
	out := new(CommonRsp)
	err := c.cc.Invoke(ctx, "/logic.Logic/ReceivePushTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicClient) ReceivePushAll(ctx context.Context, in *PushAllReq, opts ...grpc.CallOption) (*CommonRsp, error) {
	out := new(CommonRsp)
	err := c.cc.Invoke(ctx, "/logic.Logic/ReceivePushAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogicServer is the server API for Logic service.
type LogicServer interface {
	// Connect
	Connect(context.Context, *ConnectReq) (*ConnectReply, error)
	// Disconnect
	Disconnect(context.Context, *DisconnectReq) (*DisconnectReply, error)
	// Heartbeat
	Heartbeat(context.Context, *HeartbeatReq) (*HeartbeatReply, error)
	// ChangeRoom
	ChangeRoom(context.Context, *ChangeRoomReq) (*ChangeRoomRes, error)
	// RidMidStamp
	RidMidStamp(context.Context, *RidMidStampReq) (*RidMidStampRes, error)
	// RenewOnline
	RenewOnline(context.Context, *OnlineReq) (*OnlineReply, error)
	// Receive
	Receive(context.Context, *ReceiveReq) (*ReceiveReply, error)
	// ServerList
	Nodes(context.Context, *NodesReq) (*NodesReply, error)
	// Push Msg
	PushUsers(context.Context, *PushUsersReq) (*CommonRsp, error)
	PushUsersReliably(context.Context, *PushUsersReliablyReq) (*CommonRsp, error)
	PushTag(context.Context, *PushTagReq) (*CommonRsp, error)
	PushAll(context.Context, *PushAllReq) (*CommonRsp, error)
	OnlineRoomCount(context.Context, *OnlineRoomCountReq) (*OnlineRoomCountRsp, error)
	GetUserOnlineStatus(context.Context, *GetUserOnlineStatusReq) (*GetUserOnlineStatusRsp, error)
	// Forward Msg Api
	ReceivePushUsers(context.Context, *PushUsersReq) (*CommonRsp, error)
	ReceivePushTag(context.Context, *PushTagReq) (*CommonRsp, error)
	ReceivePushAll(context.Context, *PushAllReq) (*CommonRsp, error)
}

// UnimplementedLogicServer can be embedded to have forward compatible implementations.
type UnimplementedLogicServer struct {
}

func (*UnimplementedLogicServer) Connect(context.Context, *ConnectReq) (*ConnectReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connect not implemented")
}
func (*UnimplementedLogicServer) Disconnect(context.Context, *DisconnectReq) (*DisconnectReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Disconnect not implemented")
}
func (*UnimplementedLogicServer) Heartbeat(context.Context, *HeartbeatReq) (*HeartbeatReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Heartbeat not implemented")
}
func (*UnimplementedLogicServer) ChangeRoom(context.Context, *ChangeRoomReq) (*ChangeRoomRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeRoom not implemented")
}
func (*UnimplementedLogicServer) RidMidStamp(context.Context, *RidMidStampReq) (*RidMidStampRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RidMidStamp not implemented")
}
func (*UnimplementedLogicServer) RenewOnline(context.Context, *OnlineReq) (*OnlineReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RenewOnline not implemented")
}
func (*UnimplementedLogicServer) Receive(context.Context, *ReceiveReq) (*ReceiveReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Receive not implemented")
}
func (*UnimplementedLogicServer) Nodes(context.Context, *NodesReq) (*NodesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Nodes not implemented")
}
func (*UnimplementedLogicServer) PushUsers(context.Context, *PushUsersReq) (*CommonRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushUsers not implemented")
}
func (*UnimplementedLogicServer) PushUsersReliably(context.Context, *PushUsersReliablyReq) (*CommonRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushUsersReliably not implemented")
}
func (*UnimplementedLogicServer) PushTag(context.Context, *PushTagReq) (*CommonRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushTag not implemented")
}
func (*UnimplementedLogicServer) PushAll(context.Context, *PushAllReq) (*CommonRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushAll not implemented")
}
func (*UnimplementedLogicServer) OnlineRoomCount(context.Context, *OnlineRoomCountReq) (*OnlineRoomCountRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OnlineRoomCount not implemented")
}
func (*UnimplementedLogicServer) GetUserOnlineStatus(context.Context, *GetUserOnlineStatusReq) (*GetUserOnlineStatusRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserOnlineStatus not implemented")
}
func (*UnimplementedLogicServer) ReceivePushUsers(context.Context, *PushUsersReq) (*CommonRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceivePushUsers not implemented")
}
func (*UnimplementedLogicServer) ReceivePushTag(context.Context, *PushTagReq) (*CommonRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceivePushTag not implemented")
}
func (*UnimplementedLogicServer) ReceivePushAll(context.Context, *PushAllReq) (*CommonRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceivePushAll not implemented")
}

func RegisterLogicServer(s *grpc.Server, srv LogicServer) {
	s.RegisterService(&_Logic_serviceDesc, srv)
}

func _Logic_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logic.Logic/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).Connect(ctx, req.(*ConnectReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logic_Disconnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisconnectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).Disconnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logic.Logic/Disconnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).Disconnect(ctx, req.(*DisconnectReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logic_Heartbeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeartbeatReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).Heartbeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logic.Logic/Heartbeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).Heartbeat(ctx, req.(*HeartbeatReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logic_ChangeRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeRoomReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).ChangeRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logic.Logic/ChangeRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).ChangeRoom(ctx, req.(*ChangeRoomReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logic_RidMidStamp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RidMidStampReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).RidMidStamp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logic.Logic/RidMidStamp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).RidMidStamp(ctx, req.(*RidMidStampReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logic_RenewOnline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OnlineReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).RenewOnline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logic.Logic/RenewOnline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).RenewOnline(ctx, req.(*OnlineReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logic_Receive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReceiveReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).Receive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logic.Logic/Receive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).Receive(ctx, req.(*ReceiveReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logic_Nodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).Nodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logic.Logic/Nodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).Nodes(ctx, req.(*NodesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logic_PushUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushUsersReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).PushUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logic.Logic/PushUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).PushUsers(ctx, req.(*PushUsersReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logic_PushUsersReliably_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushUsersReliablyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).PushUsersReliably(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logic.Logic/PushUsersReliably",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).PushUsersReliably(ctx, req.(*PushUsersReliablyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logic_PushTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushTagReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).PushTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logic.Logic/PushTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).PushTag(ctx, req.(*PushTagReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logic_PushAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushAllReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).PushAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logic.Logic/PushAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).PushAll(ctx, req.(*PushAllReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logic_OnlineRoomCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OnlineRoomCountReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).OnlineRoomCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logic.Logic/OnlineRoomCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).OnlineRoomCount(ctx, req.(*OnlineRoomCountReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logic_GetUserOnlineStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserOnlineStatusReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).GetUserOnlineStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logic.Logic/GetUserOnlineStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).GetUserOnlineStatus(ctx, req.(*GetUserOnlineStatusReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logic_ReceivePushUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushUsersReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).ReceivePushUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logic.Logic/ReceivePushUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).ReceivePushUsers(ctx, req.(*PushUsersReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logic_ReceivePushTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushTagReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).ReceivePushTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logic.Logic/ReceivePushTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).ReceivePushTag(ctx, req.(*PushTagReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logic_ReceivePushAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushAllReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicServer).ReceivePushAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logic.Logic/ReceivePushAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicServer).ReceivePushAll(ctx, req.(*PushAllReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Logic_serviceDesc = grpc.ServiceDesc{
	ServiceName: "logic.Logic",
	HandlerType: (*LogicServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Connect",
			Handler:    _Logic_Connect_Handler,
		},
		{
			MethodName: "Disconnect",
			Handler:    _Logic_Disconnect_Handler,
		},
		{
			MethodName: "Heartbeat",
			Handler:    _Logic_Heartbeat_Handler,
		},
		{
			MethodName: "ChangeRoom",
			Handler:    _Logic_ChangeRoom_Handler,
		},
		{
			MethodName: "RidMidStamp",
			Handler:    _Logic_RidMidStamp_Handler,
		},
		{
			MethodName: "RenewOnline",
			Handler:    _Logic_RenewOnline_Handler,
		},
		{
			MethodName: "Receive",
			Handler:    _Logic_Receive_Handler,
		},
		{
			MethodName: "Nodes",
			Handler:    _Logic_Nodes_Handler,
		},
		{
			MethodName: "PushUsers",
			Handler:    _Logic_PushUsers_Handler,
		},
		{
			MethodName: "PushUsersReliably",
			Handler:    _Logic_PushUsersReliably_Handler,
		},
		{
			MethodName: "PushTag",
			Handler:    _Logic_PushTag_Handler,
		},
		{
			MethodName: "PushAll",
			Handler:    _Logic_PushAll_Handler,
		},
		{
			MethodName: "OnlineRoomCount",
			Handler:    _Logic_OnlineRoomCount_Handler,
		},
		{
			MethodName: "GetUserOnlineStatus",
			Handler:    _Logic_GetUserOnlineStatus_Handler,
		},
		{
			MethodName: "ReceivePushUsers",
			Handler:    _Logic_ReceivePushUsers_Handler,
		},
		{
			MethodName: "ReceivePushTag",
			Handler:    _Logic_ReceivePushTag_Handler,
		},
		{
			MethodName: "ReceivePushAll",
			Handler:    _Logic_ReceivePushAll_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "logic.proto",
}
